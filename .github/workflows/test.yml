name: Test

on:
  push:
  schedule:
    # trigger daily at 12am
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

# TODO: docker is not supported for Github MacOs virtual environments.
# This is a problem, because "cross" needs docker to cross compile rust code

jobs:
  build-and-test:
    name: Build and Test on Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            fetch-depth: 0
            persist-credentials: false

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            components: rustfmt, clippy
            override: true

      - name: Cache Cargo Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-cargo-dependencies
        # disable cache four daily builds
        if: ${{ github.event_name != 'schedule' }}
        with:
          # cargo cache files are stored in `~/.cargo` on Linux/macOS
          # source for paths: https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Cross Compiler
        run: |
          cargo install cross || true
          rustup target add riscv64gc-unknown-linux-gnu

      - name: Check Format
        uses: actions-rs/cargo@v1
        with:
            command: fmt
            args: -- --check

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            args: --all-targets --all-features -- -D warnings

      - name: Build
        uses: actions-rs/cargo@v1
        with:
            command: build
            args: --locked

      - name: Doc
        uses: actions-rs/cargo@v1
        with:
            command: doc

      - name: Test
        uses: actions-rs/cargo@v1
        with:
            command: test
            args: --locked


  security-scan:
    name: Security Scan of Dependencies
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-cargo-dependencies
        # disable cache four daily builds
        if: ${{ github.event_name != 'schedule' }}
        with:
          # cargo cache files are stored in `~/.cargo` on Linux/macOS
          # source for paths: https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Dependency Scanner
        run: cargo install audit || true

      - name: Scan Dependencies
        run: cargo audit
